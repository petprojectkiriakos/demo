openapi: 3.0.1
info:
  title: Action API
  version: 1.0.0
paths:
  /user/login:
    post:
      summary: Fake login
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User logged in or already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
  /actions:
    post:
      summary: Add a new action
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
            examples:
              BuyAction:
                summary: Example of a buy action
                value:
                  userId: 1
                  description: "Buy 10 shares of XYZ"
                  type: BuyAutomaticAction
                  targetPrice: 100.5
                  divergenceTolerance: 0.5
                  priceIsLessThanTarget: true
                  contextId: "CTX-123"
              SellAction:
                summary: Example of a sell action
                value:
                  userId: 2
                  description: "Sell 5 shares of ABC"
                  type: SellAutomaticAction
                  targetPrice: 150.0
                  divergenceTolerance: 1.0
                  priceIsLessThanTarget: false
                  contextId: "CTX-456"
      responses:
        '201':
          description: Action created successfully
        '400':
          description: Invalid input
  /actions/query:
    post:
      summary: Query actions with pagination, filtering, and sorting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionQueryCriteria'
            examples:
              QueryByUser:
                summary: Query actions for a specific user
                value:
                  page: 0
                  size: 10
                  userId: "user123"
                  sortBy: ["createdAt"]
                  sortDirection: "DESC"
              QueryByTypeAndDate:
                summary: Query actions by type and date range
                value:
                  page: 0
                  size: 20
                  type: "BuyAutomaticAction"
                  createdFrom: "2024-01-01T00:00:00"
                  createdTo: "2024-12-31T23:59:59"
                  sortBy: ["createdAt", "userId"]
                  sortDirection: "ASC"
      responses:
        '200':
          description: Actions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionQueryResult'
        '400':
          description: Invalid query criteria
components:
  schemas:
    UserResource:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        balance:
          type: number
          format: double
    Action:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        description:
          type: string
        type:
          type: string
          enum: [BuyAutomaticAction, SellAutomaticAction]
        targetPrice:
          type: number
          format: float
        divergenceTolerance:
          type: number
          format: float
        priceIsLessThanTarget:
          type: boolean
        contextId:
          type: string
      required:
        - userId
        - type
    ActionQueryCriteria:
      type: object
      properties:
        page:
          type: integer
          minimum: 0
          description: Page number (0-based)
          example: 0
        size:
          type: integer
          minimum: 1
          maximum: 100
          description: Number of items per page
          example: 20
        userId:
          type: string
          description: Filter by user ID
          example: "user123"
        type:
          type: string
          enum: [BUY_AUTOMATIC, SELL_AUTOMATIC, SET_STOP_LOSS]
          description: Filter by action type
        createdFrom:
          type: string
          format: date-time
          description: Filter actions created from this date
          example: "2024-01-01T00:00:00"
        createdTo:
          type: string
          format: date-time
          description: Filter actions created up to this date
          example: "2024-12-31T23:59:59"
        sortBy:
          type: array
          items:
            type: string
          description: Fields to sort by
          example: ["createdAt", "userId"]
        sortDirection:
          type: string
          enum: [ASC, DESC]
          description: Sort direction
          example: "DESC"
    ActionQueryResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Action'
          description: List of actions
        page:
          type: integer
          description: Current page number (0-based)
          example: 0
        size:
          type: integer
          description: Number of items per page
          example: 20
        totalElements:
          type: integer
          format: int64
          description: Total number of elements
          example: 150
        totalPages:
          type: integer
          description: Total number of pages
          example: 8
        first:
          type: boolean
          description: Whether this is the first page
          example: true
        last:
          type: boolean
          description: Whether this is the last page
          example: false
        empty:
          type: boolean
          description: Whether the page is empty
          example: false