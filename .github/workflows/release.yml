name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
        
permissions:
  contents: write
  
jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      tests-passing: ${{ steps.set-output.outputs.tests-passing }}
    steps:
      - name: Check if tests are passing on main
        id: check-tests
        uses: actions/github-script@v7
        with:
          script: |
            const { data: workflowRuns } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '2-build-test.yml',
              branch: 'main',
              status: 'completed',
              per_page: 1
            });
  
            const latestRun = workflowRuns.workflow_runs[0];
            return latestRun?.conclusion === 'success';
      - name: Pass result to job output
        id: set-output
        run: echo "tests-passing=${{ steps.check-tests.outputs.result }}" >> "$GITHUB_OUTPUT"
        
  release:
    needs: validate
    runs-on: ubuntu-latest
    if: needs.validate.outputs.tests-passing == 'true'

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create release branch
        run: |
          git checkout -b release/${{ github.event.inputs.version }}

      - name: Update version in gradle.properties
        run: |
          sed -i "s/version=.*/version=${{ github.event.inputs.version }}/" gradle.properties

      - name: Commit version update
        run: |
          git add gradle.properties
          git commit -m "Release version ${{ github.event.inputs.version }}"

      - name: Push release branch
        run: |
          git push origin release/${{ github.event.inputs.version }}

      - name: Create and push tag
        run: |
          git tag -a "v${{ github.event.inputs.version }}" -m "Release version ${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t 25119801634/finance:${{ github.event.inputs.version }} .
          docker build -t 25119801634/finance:latest .

      - name: Push Docker image
        run: |
          docker push 25119801634/finance:${{ github.event.inputs.version }}
          docker push 25119801634/finance:latest

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: |
            Release version ${{ github.event.inputs.version }}
            
            Docker image: `25119801634/finance:${{ github.event.inputs.version }}`
          draft: false
          prerelease: false
